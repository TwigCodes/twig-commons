apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task projectNames {
    doLast { task ->
        println "I'm $task.project.name"
    }
}
task printProps {
    doLast {
        println bintrayUser
        println bintrayApiKey
        println project.hasProperty('bintrayUser')
        println project.property('bintrayUser')
    }
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives sourcesJar, javadocJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    println user
    println key
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'libs'
        name = 'twig-commons'
        desc = 'TwigCodes Common Library Spring Boot Starter'
        userOrg = 'twigcodes'
        licenses = ['Apache-2.0']
        issueTrackerUrl = 'https://github.com/TwigCodes/twig-commons/issues'
        vcsUrl = 'https://github.com/TwigCodes/twig-commons.git'
        websiteUrl = 'https://twigcodes.com'
        publicDownloadNumbers = true
    }
}
task uploadToBintray {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'tag'
    dependsOn 'bintrayUpload'
    tasks.findByName('build').mustRunAfter 'clean'
    tasks.findByName('bintrayUpload').mustRunAfter 'build'
}

dependencies {
    implementation("javax.servlet:javax.servlet-api")
    implementation("org.springframework:spring-webmvc")
    implementation("org.springframework.security:spring-security-web")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.data:spring-data-commons")
    implementation("com.fasterxml.jackson.module:jackson-module-afterburner")
    implementation("io.springfox:springfox-swagger2:${springFoxVersion}")
    implementation("io.springfox:springfox-bean-validators:${springFoxVersion}")
    implementation("org.zalando:problem-spring-web:${problemVersion}")
}
//compileJava.dependsOn(processResources)
